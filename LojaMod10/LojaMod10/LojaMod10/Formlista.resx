<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIADJKAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAFv
        ck5UAc+id5oAACiDSURBVHja7Z0HdBTHsvcllHMCFMg5I6JEFiDA5GhyMBkkmYwBE0zOUQQbbBNNziZj
        wEQRJIGEkFAABBhsfO9z+O4533vvvHfPvfW6Gi3GZmc2CdDO/Puc/wGFHe3OdP26uruqy8HBfpqLUEmh
        TkLzhfYKJQo9E/p/Qv8UIgh6h/q30H8L/SKUJXRaaI1QD6HiQk4OaDa3EKHuQl8KpQv9nnfj0QGhgqp/
        CKUIrRfqJVQMZmx5KyM0WShJ6L/QqSA71X/n9eFRQkVg1qZbkNC4vNH+X+hAkEb0P0IXhfoIecPMjbem
        QmeE/hcdBtKo/lNoh1BZmPsfzVmov1AuOgikE10WioTpOzj4CM0Q+g2dAtKZeOegm1AhPa/wb8qbH5l9
        4xwdHSkwIIAqli9HkfXrUbs2rahvzx40eEA/oxr+0UAaNWwwBFHM8KHUtFFDKlSokEXGyr9fOCiIqlWp
        TE0aNqAObdtQv14fUp+e3Sm6eTOqVrUyhQQXJVdXV0sh8CJvl0t3zVfoK0u29IKLFqXWLZvTjE8m0uHd
        39DNi+foTsIlSk+8TtmpSfQw7fYbepp1j/72OIf+4+lDSOf69Vmu6C+XqXGDSLMNNDDAXw4wc6ZPpWP7
        d1Pi5QuUev0KZSRdpxzR57JTEint5jVKunKBLpw8SqsWL6BO7dtKGPBAZebfyRZqoCfj56CeWeaO/Hwz
        RwweRCcP7RXGnkCP01MoV+jRvTuv9FfD5+89z8mgvz95gM4P0a8/PKLHGanCU/zQLKP08/WlHl060e4t
        X1G6MHZ+rVKfM3zNP+ffu598Q/TVfRQ7YhgVKVzYkjUB3SwMDsoL6FG9KV6entSzWxcx2u+QtDU8AGMj
        /V+N/8cH99HxoVf6OTebZkyZRK4uLiaNsXrVKrQpfpUw5JtysDGnz/21/3Ff5T678+uNcsrg5ORkDgS+
        yVsT03SLEnpizqi/aM4s4WrdkA/BkpvPIz86PWTQb89z6dSRA3IKaWqe37HdB3Tu+GGzBxtT4uskXj4v
        PVg30+sDHDQ0UMvGz5FQ50wZf5VKFWnrxvWvDNqSG/4sOx1uP/RKvwjX/3nOfblIbGphuVunDtJYcy0Y
        cMyFwL1b1+QipBmLhNfyFsc12SY5mEjaqVq5Eh3du9Oqh/A0Mw3GD70x+h/ctZ0C/P1VDY8X+nhROb+N
        /3XPlBcL2RNwdnZWey//zIuE1VyrmLfvqfjhQ0OCafumz616CPwanueh00Ovj/68C9S5QztV469UoTyd
        OXrQoqmmtZ7A7WsXqWVUM1NewN28XBhNtVlqW37e3l60ZN5sq28uu/7o9NCfR//HdPzAXtXRnxeaVy1Z
        KIzzzls1/tchsGfb11S0SBFTXsBQLRk/5/HfU6MeB1Xcv33TqoUXvqnY64f+Kp4OjosdrTratm0dLefn
        +bHgZ654d2DM6JGmgpG2C7lqadtPcc+/WFioDLKwdv6FVX/ImPv/QPSN+nXrqI7+G+NXyb37d2X8hgHr
        /ImjVLJEcTUA5AiV1oLxuwvtUVt95YCJB3eTrb6ZGP0hY1F/ty6fp9CQEEUjaxhZn+5cu/ROR3+5ICiU
        decWfdi1s6ktwV5aAEBZtSy/4sXC6Oy3B60e/bHyDynN/w/s3EY+3t6KRjYudtRbW/U3JfY61i5fQm5u
        bmoQWCnkaO8A6OLwMgfa6Ifs3L6tjLiylsJw/yFj+v3HJ7Ry8QLFCDwvLy/a8sX6d+7+v+65Xj57gkqV
        LKEGgKNCXvYOgNlKH5AfzoLPZlj9EBga2PqDlADw2bQpisZVPCyMrpw9+d48AO67nMgWUa+uGgCShQrb
        s/G75q1mKmT3FaFTh/db/RAYHHD/IeMAeEyTx41RNC5O6026fOGdz/9fBwAnGbX/oLUaAHjqHGbPAPB3
        eHkOmtEPWCe8Jt2+etHqh4D5P6S2CxA3criicTWKjKCU65ffGwBYvPA9qF8fNQA8t/edgGCh+0ofsFWL
        KEqzYQ/2h6x76OyQUfHO0JCB/Ui57zV/5/v/f9WT+6n08agRpg4LqWTPAODz0J8qfUBO9eXtEET/Qfk9
        +v/4MJN69+imaFytW7YQAEh4zwC4S2NjRpkCQGV7BkA5oZ+UPuDIIR9Rrg0PADsAkBIAfhCDA5/MAwC8
        31Y570MY/YBjY0bKm2DtDcShH5ASAJ5kplGb6JYAQMEGwCgAAHorAHgs+lV0iygAAACA9AiA3IxUatGs
        KQAAALzsEBwaysEhHCP+c27Oq2AR/j5/j38HxqMdADxKT6FmjRsBAHoGABs2bwdlJN+k/d9spXmzptPY
        2FE0uH9feT48HxL51fp4SrryvbwWQKAdADwUht24YSQAoEcAGIz42rnTMh+cT3lVSgrhZIzSJUvKLSM+
        OsoAAhiS/acCN4ioDwDoDQBsvLnpqTRnxjQqU7qURVVa+OSYQX370K1L5wEBewfA3dsUUa8OAKAnALDR
        pomH2r93T3Ix4/x3JfEhEicO7cN0wI4BkJOaTHVr1wIA9AIANv7MO7dMHgBpripWKE+njxyAJ2CnAMhO
        SaJaNWsAAHoAAD9wDgvmc9ctLfqopoZiDpl87RIgYIcAyEpJpBrVqgIAegAAG+jmz9eSl5dnvpdwHjVs
        CL14lAXDsjMAsDdYtUplAEDrADDQvkmjBqbLihdyIncvf/INKk6evoXJydnN5GuKFilMJw7upd/gBdgV
        AO7fvkWVK1UEALQOgN+fP6avN6wld3d1Y/YtXIIadJpE3Sfso0FzLlHvaccoesAyCisfQY6O6tOGoYMG
        2HTyEHsofEAFd0wlyd/hoCQLFh4NAU6G+AWtiD8Ty9pF2FcAqAgAaB4AbJiDB/RVH8VL1pCGHxOfRbFr
        cyg2PvulxP8HzbtCVRp8SA4qtdy5ViF3ll+t6JB8YMmFk9/SwtkzZe43n4AcO/IvEt8b/3EMxS9fQinX
        r5jV8Q2d/Iv4VTRxbJzx69qpPp08gfZu3yyr+lgDAQBAJwD46WGmnOtVU5nruXsFUPuRGylOGHvMmsw3
        xBAYOPt7Ci6tvGXEVYv279gqRyVLjX/dymVUsnhxs9YbnJ2cKKJuHVmmSm3hkX92/fvvKLp5lDnFJu1S
        Pj7eNHzwIBnRZykEAACdAIAX524IQ+B5utLfKFfrAxqxPFWO/sYAYIBAkx4zyVFhB4EPL+XyUZw7YInb
        zyO/ucb/ulo2b6bY8V9Wu80wWe1WC+Iimkvnz7EeAFgD0D4AeIHO389POain3Rhh4NmKxm8AQJcxO8jN
        w1fxOjOnTrYIADznZ7ffmo7PEYlKXgB/L/nqRVlPQesAcMgr3fU007KpgPkAuAYA2DsADu/5hnx9fBRv
        YuNu04T7/0AdAPHZ9OHkQ+TuHaB4nakTx1kEAJ4uTJs0wTr319tb5iUYm3IwAK6eO01FCgfpAgBNGjYQ
        RppiFQCqAADaB8DF08cpKDBQ8SZWb9qPRq++rwoAXh9oM3g1Obu4KZYvWzRnlsUA2LZpA3l4eFjc6cuW
        LiXLSBvzAGSUW2qSapirlsTrAJbuwAAAOloETL1xlUqozLMLF6tC/WedU54GxGfRqJVpVLVRL8VrcMbg
        l+vXWLQIKHPSxcjVQ73+2xvy8HCnuTM/Va13yNf+fM1K1amPFlSpQgW5jmJpJCYAoBsA3Je1AdTOfnNw
        cKSaUYNoxPKUPAhkveb6Z0m1HrSSXD2UpxEhwcF05btTVnXEe4nXadLYOKodXpPCQkMpVFwrNOTP4utz
        pdimjRvSmmWL6YesdFWXl3/G8OPSVny8Naczhxi5rr2K8zB6de8m10FsiQMAAHQQB/Db81yaM32q+mqy
        qztVa9yX+k4/RSNX3JVz/tGr0mnwggRq0n0GefuHqL6+dXQLecikNXvSHDvAozm77ak3rshiFMYk6yOk
        p/zpPAP1Tv7H2XdpiQmK17VHZSTfkDsd1uZgAAB6AoDoJLwOUKJ4MZMupX/RMlShTgeq3WoEVW3YS+79
        Ozmr76NzWvGqJQtsTggyRPupydqgF1PXtTvlRQTalAsAAOgnF4BH2PFxMW9lHsrHSmXdScTZAPaWDAQA
        6CsbkM/143l2fhp/YIA/ffP1RqQDAwAAQEEGgAECHBOQXwEybq6uNPvTqSg/bscAqFq5EgCgFwAYtPmL
        dXJF3Rbj9/T0pAkfx1ocgQYBAADAewYAr45/u2+3PNfPUSXDT0nFwsJo2YK5chUaxg8AAAB2BgDDdIAD
        hKZ/MpHKly0rk0pMGX6RwoVpQJ9e9N2xwzKLD8avgROBAAB9AsAAAf6Xj/hevXSRPPc/vEZ1KlGsmDR2
        DjipXLECfdAqmj6bNoXOfnvo1bYijAgAAADsHACvg4BDeH98kElZKUnSM7h2/ozMqLt/+6YM8JG/g6pA
        AAAAoD0AvN4p/ho084uNAScQAAAA2AkAIJwKDAAAABAAkAeA5gAAAAABAAAAAAABAAAAAAABAAAAAAAB
        AAAAAADZOwCqAQAAAAQAAAAAAAQAAAAAAAQAAAAAAAQAAAAAAAQAAAAAAAQAAABaBoAhC5DTgrm8l0H8
        NdKANQyAqlUAAD0DwGD4fLYfF9TcunEDLV84T1b6XTh7Fm2MX0WnjxygnLvJfzpEBNICABKpOgCgTwAY
        DJ8rzLDBf9CqJYWGhJCHuzsVKlToVcFPPvmXj/6OqFeXJo8bQ1e/O4XjwAAAAMCeAcAP/8eHmfTV+niK
        FIZtznmABpUpVYo+nTxBdh54AwAAAGBnAJAVedNT5Gju4+Nt1ZHg7CF0aNuGblz8TkAAngAAAADYBQD4
        oT+5n0bDPxpo0aivpAYR9enG99/BEwAAAAB7AMCLR9k0c8pkcnV1zbfSYOwJZKIuIAAAABRsAHCJ8AM7
        t1FQYGC+1gbk6cC0SePlwiAMy74AkCUBUBUA0DoA+GE/zkil9h+0NsuonZzdyN3Tj1zcPM36/VIlStCl
        08cxFbBHAFQDADQPAA7m2b31K/L29lI1ZHcvf6repC+1/mgldR+/h9qP2EgR7cdRQEg5kxDg92mLF8D1
        7v8ahASpSNwrW4ALD0BHAGDDjBk+VNWA/YqUprbD1tOoVekUt/YBxa7NFsqh2Phs6j31GJWu1kL19bVq
        1rB6LYBfw8VIdnz1BS2ZP4cWzfmMFs2FjCrv3ny+ZgVdOnNCVma29p4zAGrAA9A2AH56mEk5qclUp1a4
        4k1kVz+6/1Jp8DFrsoQy/6Q48f3e045TYEh5ZYD4+tLRfbvkKG5pR9y3fQvVDq9JHh4vg5A4AAlSl6uL
        iyzSOmvaJ/QsO91iCEgApAAAmgfAi0dZlHj5AgUXLao8h68aRcOWJIvR/k3jN4g9gQadJpKDQjVh3laM
        X75EuKfmA4Bd2BsXz6lWp4FMlWn3oI1rV1kcjwEA6AgAHMsf4O+veBPrthktDVzJ+CUAhBfQKWYzubor
        Bw/Nnj5Vzk/N7YQ8j+UwZEPoMWSdOndoZ7EXAADoBAA/CwAc2r2DfH18FG9ik+7TKW7dA3UACED0/OQI
        eXgrbyNOmTDWIgDwdGHKhHEwYhvVqEEEPRRGCgAAAEY9gPMnjlJgQIDiTQxvMUTV+A3rAO2GbyBnVw/F
        68z/bIbFAPh8zUo5n4UhW69+vT6Uaz0AAADwJgBEx7iTcInCQkMVb2JImTr00fyrqtOA0avvU62WyjsJ
        HF34+eoV0q23pBNmJN+kFs2awpCtVGhIMB3Zu9PiLUEAQEe7ALnpqdS0cUPlaD4nZ7nfP3p1xpsQiM+S
        o3+nmC3k6VtE8RqFgwLp3PEjVnXEa+fPUK/uXSWk/P385I6Cnx+kpsJBQdQwMoJ2fLWR/vY4x7ptQAGA
        mtUBAF1EAvL83FQQUGTHCTR4QYKEwMtYgBwasTyV2g5dR0Fh6iv1TRo1kFmG1uxJMzR4EYt3K04c3EvH
        9u+GVLWHLp89SQ/E87U2BwMA0Fkk4KnD+6lI4SD1uH7hCYSVj6A6rUdRVO+5AggTqVyttuTm6av+OkdH
        mjNjmk0JQX8cSfbyWDJIXb/aeEwbAKAzD4CnAoMH9DN7bulYyMns3w2vXp1Srl9BLoC95QJIAFQDAPSQ
        DcjGefH0cSpXtkz+BqJ4eNDaFUuRDgwAAAAF/TwAfuh8DJhaUJClqcAxI4ZZFYoKAQAAwHsAACePLJ43
        22YIODs5Ud+ePSg7NQmuPwAAANgDAF6HwJfr1lDZMqWtMn6OKpzwcYy4/h2cCahlALQAADQHAMPDZ104
        eYwG9esj9/DNMXwPMd/noB3ee+br/gq3X9MAaNUiCgDQIgBe33/nnx8/sJcmjY2jRpERFBJcVE4PvL28
        ZEAObx1y+aghA/vT1o3r5d4zb9Vhzg8AAAB2DgBDR+B9Zf6XE0puXTpPpw4foD3bNsv8fq4WdP/2TTlt
        MPweDAgAAAA0AgCjwTjPcvMt4AQq6ACoDgAAABAAAAAAAJDuABBeAwAAACCdAiAJAAAAIAAAAAAAIACg
        wAJgJAAAAEB6BcDEMbFqAPhRqDwAAABAGgQAl7RbuXg+uSifG5ksVBgAAAAgDQKA//blMyco3HjA0r+E
        pgsVAgAAAMhCAGTbAQAMENi1+UuqWytc5qM4Ojr+U7y/vwutEQpysPMGAEDvDQBc07GgA8AAgesXztCm
        tav5GPRt4v3VF3J30EADAKD35wHYCQAMEHickfrv5znpcUvmzXbQSgMAIHgA5uvfQmOEAAAAALIJAKkA
        AABg9Gju146gFl8jIxAAAAA0fh4AV5fhvH+uI7h3+2a52MIn/5w8tF+WFnueV18AINAXANIAAO0CgEf3
        p5n3aM/Wr2n44EGyTlxgYIA8DcjNzU3WnudSXWVKlaLuXTpR/LLFlJ50Ax4BAPA+FwL//Tgj9eNTh/YB
        ALacCfj3Jw/kUWBdO3YgHx9v804Cdnam+nXr0IbVy+lp1j2cBgwAvNMdgJzUZEq++v2/j+7dycE/bgCA
        lacC8/dWLVmoWjHYQfVwUHca/tFAOWUABACAd2H8iZfPy5Oo+f2KAesn8f4OC7UTcgIALKgLwCXCZk6d
        LN18BxvqAjg6OlKn9m3pXuJ1QAAAeKvGz++hd49uss8ZyQTsCACY6wE8eUjxy5eQj7d3vpUG+6h/X/n+
        sCZgnwCoXcABwMlA2zZuUJumnhTyAQBMAIAX/M5+e4hKFC+Wr7UB3Vxdaen8OQAAAPDW0oE/nTxBrQ8+
        ESoFAJioDvw8J0OW8jLXsJ2cXY25XEZVpVJFSrxyAVMBuwRAzQIPABMHgvyMA0FMAID377/dt4sCA9Tr
        ATq5uFGpqlEU2XECtRq0gpr2mEmVI3uQh0+QSQhM/2SizR3yjSAkDciaLdOXsRmm7oVtW7GvABBu9wDA
        iUDmeAATx8Spl/n2LSINftjiRIpbm5OnBzRq1T3qFLOZgkuFq76+QUR9WTXImk7JRvI44y59f+oY7dry
        FX3z9SZNaPfWr+nSmRP0NDPNLO/IcO/Sk67TsQN7VK994uBeuQvzy9NHOgAAzgS0+gbyqj9X/OGyX8ru
        vgs16jqVYtZkUmx8lvz3D2VJEHQdu4u8A5S3DQMDAujM0YMWTwO4I3L0YdvW0RQUGEheXp7k6akNeXl5
        ydJqHGvBFZbUainK7VnxrNYsXSRLsXFZNsXrCvn5+cpc/i/iV9GLR1kAAABgXC9Ep0q+dpFCQ0IUb2JY
        +fo0ZOF1I8b/Z9Vprfwg+Mim9auW0+/CPbWkE969eY0aCu8hPxcmC6JatWguz+FX8pAYnNs2bZCGb8l1
        GZocum0NeAEAPQBAjA7fHTssR2ilv1Gr5TA50qsZP08J2o/YSC5unorXmTdzOv3+4xOzOyHDYt2KpTLC
        UOsA4JNstn/5uZy/GzPGH7LuUcd2H1h17V7du76a6gEAAMCf9LMAwKFdO8jXx0fhBjpSk+7TKW7dA1UA
        xMZnU89PjpCHt3Ip8SkTxloMgCkTxmne+A1aMHum0ftjzvl8auLpHU/zAAAAwKgHcObbQxSgsgNQp9VI
        k+5/rPAAOo7+SngAyhGEc2ZMsxgAq5csIicnJ80bPydXbf58naIHwAuFvA5izbW7d+4ot3mtAUAdAEDr
        AMikpKvfU0hwsOJNLFGpMQ1dfEsVAvyz+u3GqK4BsDtvyRoAz1uTr15UHYW0oiYNG8hMSiUj5e/zgh4v
        8llyXV9fH9q26XOr1wDq1AoHALS+C8Dbc5zFp5jl5+JOUb3mSDc/xggEeP7/4eSD5FeklOI1/P395NYU
        709b2hGPH9gjDYSnKa6urkIumhBHSfKiXnTzKDp3/IjJXYBn2ek0b+anVLpUSfL08FC9NoOiXNkytGzB
        XDH/z7Qq1gAA0FEo8JjRqsEU5BMQRtEDltLI5alyPSA2LxaAAdB9wj4qViFS9fX16tSWHcraOABeIT+6
        d5cYBVfShlXLZcqxXUt8ho1rV0m4MYDNjQPgg1luXTov9/rVrr9ry5fSs+O0bmvuOQCgs0jAAzu3m9xi
        4vl9xXqdhDcwV8z3v5bRgLVaDiWfQNP5A5PHjbE5EtAQ5fa7RmRtxJ4hItLUtW0JvX4JgGQAQC+RgHyA
        R7fOHc1L9S3kRK7u3jIfwJzfLy9c0YQLZ5ELYHe5AOoA4KkLAKChbEAOLw0JLpqvi1u8h8+r/zAqAAAA
        KODnAfD8cvHcz2RQSn4BoGe3LhbvQUMFAwA5AIC+AGBYaR4fF0Pubm42G3/LqGZ0O+ESXH87BkBdAEA/
        AHgVdJJ1j+bO/FTGkVtj+Lzn37tHd0q5fgXGDwAAAPYEAMPD/zk3m/Zs2ywecjNyd3cz+xzAqlUqy2nE
        o/QUGD8AAADYIwBe3256mHaHNq1bTT27d6WyZUqTj4+PDFstVKiQHOk5pZWjCDmbbf6s6TJyjzsP5vwa
        AUBtAEC3AHh9/52jybgC0OHdOyQQli2cR+tWLpOHWlw9d0q+h1/zyoTBgAAAAEAjAFA6kouTen634Vgr
        CAAAAOwIAJAOAXCXAVALAAAAIAAAAAAAIAAAAAAAIAAAAAAAID0AoA4AAABAAAAAAABAAAAAAABAOgIA
        n+QEAAAAEAAAAAAAEAAAAAAAEAAAAAAAEAAAAOgQAIZ0XyQAAQAAgA4A8HomIH/Nr3lyP00eH8bnCMoM
        QWQEAgAAgLYAIM8CEIbNdeUSLpyhNcsW0+jhQ+nDbl2odXQL6tyhPQ0Z2J/mzphGp48cEB0hBanBGgNA
        fQBAnwBgQ+ayYUf37ZIGHxYaolqmm4uLNm3cSFal4VOEcDAIAAAA2CkA2HjTE6/T6GFDLD4YlE8Tbt2y
        BZ05egieAAAAANgbANj4r50/I43Y0YYjwcuXLUvbv/xC1qaDQdkxAFSKxgIAGgMAG//ta5dkJV6HfCgK
        EhoSQnu2fY3pAAAAABR0APAD56O8uZKPQz6WBqtauTJdPnsSEAAAAICCDAA20NVLF5Grq2u+AoDVt2cP
        epaTgTUBAAAAKIgAYOO/Kx5k7fCaJo3ZycWNfALCKLh0LfIPLkOuHj4mX+Pn50t7t2+RpbDzo2NCpgUA
        AABmA4CP9163cim5qGzzsYqUqEbRA5ZS/1nnaOiimzRo7mXqHLeVyoV/YLJUOHsBvK1obefkYCN+Lb/f
        5zmQKRkCtKy93wCAjgDAhtnnw+6qBly8UiPqO+M0xa7Npth4VtZLrc2hYUuSqHb0cCpUyEnx9eXKlqE7
        CZctXgvgjsjv78DObTQmZqRco+jRpZNQZ0hFQwcNoLUrlsqz/a2BAL/mAQCgfQCwcWUk36CKFcor3kQv
        v2DqOnanNPaYNZlviIEweEGChITSNTw9PWnn5i9fhRObqxePsmnezE8pwN8/39cmtC726Lp16kD3b9+0
        GAIvAXCbIuwCACMBAGtv4ItHWZRw/gwVKVxY8SZWqNeJRq1ME8aeZRQArDgBh6je84QXYHwa4eTkRMsX
        zpcVhcx2+4W3cPLQPipapAgM2kpxwdbPpk2x0gNQB0CrFlGUnnSdHmekUm56yjsX/93s1CRTO1fPhEoB
        ACoAOHZgj1yoU/obkR0nKI7+r7wAMTXoNm43uXn6KV5n+ieTLAIA/+6cGdNgyDaKR+rHoo9Y4gWYAwBO
        FNq5eRMd3LWdDoop2rvWvh1baOrEcRQYEKD2+e8KFQUAVABwdO9O8vVVXs1v2GWKHOFVASCmAT0m7id3
        L2VXfdqk8ZYBQEwXGBowYtvUrHEjOWJaBYB6ygDg6tA8cPj7+b0X+fn6quan5Gm3kDsAoAIADtQpHBSk
        eBOrNOxJo1elqwIgbu0Dih6wTHE3gMuJL5k3x7IpgAAAbx/6+vjAkG3Q2NhRclfAqilAvbr2/Nn/KTTM
        wc7bW18ETLuVQKVLlVS8kf5Fy1DvqcdUFgGzaPiy21S+TnvlJCF3d9ryxXqLFgG5E/6QlU4jhw6Wow2M
        2XJF1q9LNy+dt2r3RQMASBAKBQBMbAPywR6d2rdVvZkV63WmIQtvSAiwwcsFQbkVmC29g6Y9ZpKzi7vy
        NmKxMLpx8TurOiKHKK9YNJ86tG1DdWqFU62aNSA1hdeg5k0b0/iPY+iWMH6rtwHT7BoAvwh1c9BAe+sA
        4FF58bzZ0k1X+juFnJypTI1oudA3bHGi3BUYvvQ29Zt5lmpHjyA3T1/VB8KAYdBY2xlfegP35L42r/xC
        6srNSJWZmNbmYBgAEGmfAPiH0HghJwDAzFBgHp3Llytr8uZ6eAdSWLl6VKl+VypVNYp8g4qTo2Mh9TMC
        hPu/ce1qmxOCEOL77sKB7RgAOUKDhVwdNNLeWTrwzKmT5b5xfj+UNtEtpRuPZCD7SgayEwD8b96Iny60
        Qqi6g8baO8sGvJd4nZo1aZSvDygsNFRuMyIdWJMAyBCaLjTpPWiy0AShIUKthYppxeV/bx4AG+m540eo
        csUK+WL83t7etGbZIhiUdgFwVMjNAU0bADA8+MN7vqHqVavYZPxBgQG0cPZM+tGGDECowAPgmJA3TFRD
        ADB4ApfOnKC2raOtOiCkauVKtGXjevr5cQ6MHwBAszcAGCDAHSB++RIZ8+3l6ameeebiQmXLlKZJY+Mo
        8coFVA4CANDsGQCvVwTKvHOLdm/9Wv6tNtEtZDAO5/fzNCGqSWMa1K8PbVi9gpKufE9/s2HvGSqIAKgH
        AOgVAH+qEJQXwsslwTjQJCPphgBDIuWmp9KL3Gz5cxi+BgFQHwDQPQCMBeP8igKhAAAAoD8AQAAAAAAA
        QAAAAAAAQAAAAAAAQAAAGgAAAQBoAAAEAKABAJAWANAAAAAAIAAAAAAAIAAAAAAAIAAAAAAAIAAAAAAA
        II0DIAIAAAAgHQOgPgAAAPyREsylvfhfw5nzhq/5/8gMBADQNAYANmw2ds79P7R7By2aM4smjf2YRgz5
        iMbEjKTZn06VJb9uJ1ySZcZ+AwgAADT7B4DBiG9ePEeTx42RJae4SKexugFc+KNcmdI0oE8v+nb/bgkC
        HA4CAKDZKQDYeLme/EIx2lcoX86iA0ELBwXSsI8GUvLVi4CAnQPgYdodaggA6AsAbLTpSdflOX/WnAhs
        EK8enz5yANMBOwcAPAAdAYCNPyslkbp26pAvhUEqV6xIZ789BE8AAEAr6ADgB/4sJ4Nihg9VrRJsqRo1
        iKQ7CZcBAUwB0AoyAHj1not5eHt55XsBx5gRQ+nn3GwYlj0CIBIA0DwA+GFnpyabVRiUS4G7efiSt3+o
        LBVeyMnF5GuCixalU0f2wwsAANAKIgB+f/5Y7uV7uLurGrJPYBhFtB9LXcfupAGfnaeekw9Ti74LKKRM
        HZNlxYcPHmSTF/Ay6OixDDpib+W355BRyXvzR8CWtYuwAICOAPBzbg4NGdhf1YCLFK9K3cbtopg1mRS7
        Nodi47NfSvx/4JyLVCmiq3q9wCqV5e7Cr1Z0SA5Eunz2JC1bMI8mjomjcXGjaXxcDGRUL+/N7OlT6dCu
        HfQsO90qCAAAOgEAB+1wlJ9aNWA3Tz9qN3wDxQljZwD8VQwB9giKlqyp7D14e9OBb7a9qjBkifFvjF9F
        ZUqXytfFST3I389Prr9w9SZLIQAA6AQALx5l0Y2L56hokSKKD7pseBsasTyFYuKzjALAAIEm3afLNQJj
        13B2cqJVSxZK19QSt//i6eNUulRJGLSV4qKtKxbNtwEAEQCA1gFw8tA+OVoo/Y367cYIA89WNH4DALp8
        vJ3cPHwUrzNr6icWAYDn/Jx7AEO2Te3atKKnWfcsggAAoCMAHN79jYzzV/objbt9Ktz/B+oAiM+mnpMP
        kYd3gOJ1pkwYZxEAeLowbdJ4GLGNatwwkh7duwMAAADGAfD9qWMUFBio+KBrNO1PMavvqwKA1wfaDF5D
        zi7uCtuHjjK3wFIAbN24gTw83GHINohzMyzdgQEAdLQImHrjCpUoVkx1B4AX+XiUNwqA+CwatTKNqjXu
        o7yQ6OZGm9atsWgRUHZCMXJ169wRhmylOJnr3PEjFsdgGO59IwBA+wB4kplGrVs2Vwn+caTwFkNo5IrU
        vLWArNdc/ywJBh79OUBILRjo8pkTVnXEtFsJcmurZvVqFBoSTCHBRSETKl+2DPXo0plOHT5gfRwAAKCP
        OAA2ys+mTVFfTXb1pBrNBlK/GWfkaM+LfqNXZ9CQhdepWc/PyCewmOrrW7WIku/Tmj3pX589ki4sJyrd
        vnaJkq5+L9ONoTeVlPcvx1w8y86wOvoSANARADiCjNcBioWFmXQpA0LKUaX6XajeB7FUvUk/Ci1bh5xc
        3FRf4+zsTMsXzrM5FJg7JV8DMkPiXtmSig0A6AgA/LD/9jiHPh494q3MQzml9P7tmzgbwN5yAQAAfQDA
        EHRz69J5Oc92yOdotG2bNiARCABAK8gAMEBg/zdbKSw0JF+M39XFhaZ/MkluNWL0BwDQCjgADNq0bjUV
        Cwu1yfg5s/DjUSPk2YIwfgAArYAC4HlOhtEOcHDXDqodXtMq4w8JDqaFs2dZnYkGFSQARAIAWgYAG6lS
        Ig5vufGR4JyMY04mXmBgAPXq0Y1OHd4vFxVh/BoAQAMAQNMAeJqZJlNu1YqCJFw4Q8sWzKVunTpSlUoV
        ZTAOhw5zBmHZMqWpRVRTGbN/4uBeuff8Gxb8AAA0+wBAbnqKHK1NpeVyCC8fGpp5+xYlX7so4wZuXPxO
        Bpw8zkh9VToMoz4AgGZHADCEA5vbKd4MxnkEowcA0OwZAGrTAEjfAGgMAGgfAJwrznv16PgQAKBDALD4
        GqbWAiAAAADQKABYP2Tdw1QAAgD0CgBDXAAgAAEAOgWAwRPAdAAAkABoCADoDgAs3tvnPAF4AwAAAKBD
        ABh2B/jaL6sHZUsYAAgAAACgEwD8FQbsFXDMAE8ReK0A0q44SSwj6QYqAwEAkB7FwL+TcIki69cDAAAA
        SK8AaAAAAAAQAAAAAAAQAAAAAAAQAAAAAACQ5gGQAgAAABAAAAAAABAAAAAAAJDuABABALzvVlHoJ6WH
        EDNiqIzQQ6eF8n0R8Nolqls7XA0AR4S8YKJvtxUTeqT0EFq3bEH3biXIwz3RcaH8TAY7c/SgrPGgAoAt
        Qi4w0bfbAoWuKz0Eb28vmjtjGqXeuEIP7iaj80I2Kzs1ia6dO009u3UhR0dHNQAshHm+/eYktE7lIZCX
        lyc1a9yIBvbtTUMG9KPBEGSluP/0+bA71ahWlZycnNSM/7+EusM8303rKvT/Hd5C6W4IslJpQsVhmu+m
        +QkdR6eDCoj+JTQFZvluW7TQj+h8UAHQBaEwmOS7bY5CI4X+gQ4IvUfdE4qAOb6fxlsuI4SeoSNC70EJ
        Qo1hhu/fE4gSOij0Gzol9A7m+0+FlguVg/kVnOYr1EVok1Cq0H/kPSx0WshW/Y/Qc6ErQvOFIoWcYXLG
        2/8BBqvV6cTbCl0AAAAASUVORK5CYII=
</value>
  </data>
</root>